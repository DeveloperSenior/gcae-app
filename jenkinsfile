pipeline{
    agent any

    environment{
        AWS_CREDENTIAL = credentials('aws-credential-dllo')
        AWS_REGION = 'us-east-1'
    }

    stages{
        stage('Continuous Integration') {
          tools {
            nodejs 'node_20'
          }
          stages {
            stage('Checkout repository GIT'){
                steps{
                    //checkout scm
                    git credentialsId: 'CredencialesGitHub',
                    url: 'https://github.com/DeveloperSenior/gcae-app.git',
                    branch: 'develop'
                }
            }

            stage('Install Dependencies NPM'){
                steps{
                  sh 'npm install'
                }
            }

            stage('Build & Run Test'){
                steps{
                    sh 'npm test'
                }
                post{
                    always{
                        junit '**/build/report/tests/junit.xml'
                    }
                }                
            }            

          }
        }
        stage('Approval') {
            input {
                message "Do you want to approve the deployment?"
                submitter "afescobar" // Jenkins User ID
                parameters {
                    string(name: 'Approval', description: 'Please review the deployment', defaultValue: '')
                }
            }
            steps {
                echo "${Approval}, Approval"
            }
        }
        stage('Continuous Delivery') {
            
            
            tools {
              dockerTool 'docker'
            }
           stages {

            stage('Login repository AWS') {
                steps{
                 //sh "docker login --username AWS 754802997149.dkr.ecr.us-east-1.amazonaws.com -p $(aws ecr get-login-password --region us-east-1) "
                 sh '''docker login -u AWS https://754802997149.dkr.ecr.us-east-1.amazonaws.com -p $(aws ecr get-login-password --region us-east-1)'''
                 
                }
            }

           /*stage('Push Image Docker AWS') {
                steps{
                    sh 'aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin 754802997149.dkr.ecr.us-east-1.amazonaws.com'
                }               
            }*/
           }

      }
            
    }
    
    post{
        always{
            cleanWs()
        }
    }

}