pipeline{
    agent any

    environment{
        AWS_CREDENTIAL = credentials('aws-credential-dllo')
        AWS_REGION = 'us-east-1'
        BUCKET_TEMPLATE = 'dllo-gcae-templates'
        NODE_TEMPLATES = 'node-templates'
        NODE_TEMPLATE_PROJECT = 'node-template.zip'
        APP_DEBUG = 'S'
        
    }

    stages{
        stage('Continuous Integration') {
          tools {
            nodejs 'node_20'
          }
          stages {
            stage('Checkout repository GIT'){
                steps{
                    //checkout scm
                    git credentialsId: 'CredencialesGitHub',
                    url: 'https://github.com/DeveloperSenior/gcae-app.git',
                    branch: 'develop'
                }
            }

            stage('Install Dependencies NPM'){
                steps{
                  sh 'npm install'
                }
            }

            stage('Run Test'){
                steps{
                    sh 'npm test'
                }
                post{
                    always{
                        junit '**/build/report/tests/junit.xml'
                    }
                }                
            }

            stage('Build Image DOCKER'){
                steps{
                    sh 'docker build -f ./Dockerfile -t gcae-app:latest .'
                }               
            }           

          }
        }
        stage('Approval') {
            input {
                message "Do you want to approve the deployment?"
                submitter "afescobar" // Jenkins User ID
                parameters {
                    string(name: 'Approval', description: 'Please review the deployment', defaultValue: '')
                }
            }
            steps {
                echo "${Approval}, Approval"
            }
        }
        stage('Continuous Delivery') {
            
            
           /* tools {
              dockerTool 'docker'
            }*/
           stages {

            stage('Login repository AWS') {
                steps{
                 sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 754802997149.dkr.ecr.us-east-1.amazonaws.com'
                }
            }

           stage('Tag Image Version ECR AWS') {
                steps{
                    sh 'docker tag gcae-app:latest 754802997149.dkr.ecr.us-east-1.amazonaws.com/gcae-apiservices-dllo:latest'
                }               
            }
            stage('Push Tag Image ECR AWS') {
                steps{
                    sh 'docker push 754802997149.dkr.ecr.us-east-1.amazonaws.com/gcae-apiservices-dllo:latest'
                }               
            }
            stage('Deploy version') {
                steps{
                    sh 'npm run update-s3-templates'
                }    
                steps{
                    sh 'aws ecs update-service --region us-east-1 --cluster gcae-app-cluster-dllo --service cc-gcae-app-service-dllo --task-definition gcae-app-task-dllo:1 --force-new-deployment --deployment-configuration "deploymentCircuitBreaker={enable=true,rollback=true}"'
                }               
            }
           }

      }
            
    }
    
    post{
        always{
            cleanWs()
        }
    }

}